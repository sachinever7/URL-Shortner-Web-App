<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fetch Interval Example</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top: 4px solid #3498db;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">

    <div class="bg-white p-8 rounded shadow-md w-96 shadow-inner rounded-lg">
        <h1 class="text-2xl font-bold mb-4 text-center">Execute Script</h1>
        
        <label for="intervalInput" class="block text-lg font-medium text-gray-700">Enter interval in minutes:</label>
        <input type="number" id="intervalInput" class="mt-1 mb-4 p-2 border border-gray-300 rounded w-full" placeholder="e.g., 5">
        
        <div class="flex justify-between ">
            <button id="startBtn" class="w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700">Start</button>
        </div>
        
        <div id="statusMessage" class="mt-4 text-center text-lg"></div>
    </div>

    <!-- Modal for displaying the fetch response -->
    <div id="responseModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center hidden">
        <div class="bg-white rounded-lg shadow-lg w-10/12 max-h-3/4 p-6 flex flex-col items-center">
            <div class="flex flex-col items-center mb-4">
                <div class="spinner mb-2"></div>
                <span class="text-lg font-medium">Running</span>
            </div>
            <button id="stopBtn" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-700">Stop</button>
        </div>
    </div>

    <script>
        let intervalId;

        function updateStatus(message, isRunning) {
            const statusMessage = document.getElementById('statusMessage');
            const stopBtn = document.getElementById('stopBtn');
            statusMessage.innerText = message;
            stopBtn.disabled = !isRunning;
        }

        document.getElementById('startBtn').addEventListener('click', () => {
            const minutes = document.getElementById('intervalInput').value;

            if (minutes > 0) {
                const interval = minutes * 60 * 1000; // Convert minutes to milliseconds

                intervalId = setInterval(() => {
                    fetch('https://jrqb4hh7zqcaptiw7luqf6e7ma0qserf.lambda-url.ap-south-1.on.aws/', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Success:', data);
                        showModal(data);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showModal({ error: 'Failed to fetch data' });
                    });
                }, interval);

                updateStatus(`Fetch requests running every ${minutes} minute(s).`, true);
                console.log(`Fetch requests running every ${minutes} minute(s).`, true);
                document.getElementById('responseModal').classList.remove('hidden');
            } else {
                alert('Please enter a valid number of minutes.');
            }
        });

        document.getElementById('stopBtn').addEventListener('click', () => {
            clearInterval(intervalId);
            updateStatus('Fetch requests stopped.', false);
            console.log('Fetch interval stopped.');
            document.getElementById('responseModal').classList.add('hidden');
        });

        function showModal(data) {
            const modal = document.getElementById('responseModal');
            modal.classList.remove('hidden');
        }
    </script>
    
</body>
</html>
