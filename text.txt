function doPost(e) {
    // Check if the body exists
    if (!e.postData.contents) {
        return ContentService.createTextOutput(JSON.stringify({
            Message_Sent: false,
            error: "No Event Body Found"
        })).setMimeType(ContentService.MimeType.JSON);
    }

    // Extract and decode Base64-encoded body
    const base64EncodedBody = e.postData.contents;
    const decodedBody = Utilities.newBlob(Utilities.base64Decode(base64EncodedBody)).getDataAsString();

    // Parse the decoded string as URL-encoded data
    const parsedBody = decodeURIComponent(decodedBody);
    const data = parsedBody.split('&').reduce((acc, pair) => {
        const [key, value] = pair.split('=');
        acc[key] = value;
        return acc;
    }, {});

    console.log("Payload is:", data);

    // Extract parameters from the parsed body
    let msgText = data.text || 'No message text';
    let url = data.url || 'No URL';

    // Process the data (you can call other functions or handle the data as needed)
    let res = getTimestampFromUrlandSendmsg(msgText, url);

    // Return response
    return ContentService.createTextOutput(JSON.stringify({
        Message_Sent: res
    })).setMimeType(ContentService.MimeType.JSON);
}

/**
 * Simulated function to process the data.
 * @param {string} msgText - The message text.
 * @param {string} url - The URL.
 * @return {boolean} - Status of message sending.
 */
function getTimestampFromUrlandSendmsg(msgText, url) {
    // Your logic to handle msgText and url goes here
    console.log(`Message Text: ${msgText}`);
    console.log(`URL: ${url}`);
    return true; // Simulate successful processing
}
